app
  div.overlay(onclick='{modalClose}')
    div.f.fh.wrap-modal
      modal-about
      modal-art
      modal-branding
      modal-uiux
  overlay-loading
  overlay-choose

  style(scoped, type='less').
    :scope {
      /*
      display: flex;
      display:-webkit-box;
      display:-ms-flexbox;
      display: -webkit-flex;
      justify-content: center;
      -webkit-justify-content: center;
      */
      .overlay {
        z-index: 1000;
        display: none;
        position: fixed;
        width: 100%;
        height: 100%;
        .wrap-modal {
          width: 100%;
          height: 100%;
        }
      }
    }

  script.

    this.modalClose = function(e){
      var touchedClass = e.target.className;
      if(GLOBAL.overlayInteractive&&touchedClass=='f fh wrap-modal'){
        $('.overlay').fadeToggle("slow", "linear");
        var modals = document.getElementsByClassName('modal');
        for(var i=0; i<modals.length; i++){
          var modal = $(modals[i]);
          if(modal.hasClass('active-modal')){
            modal.toggleClass('active-modal');
            modal.fadeToggle("slow", "linear");
            var tagName = modal.prop('tagName');
            console.log(tagName);
            switch(tagName){
              case "MODAL-ABOUT":
                GLOBAL.aboutReset();
              break;
              case "MODAL-ART":
                GLOBAL.artReset();
              break;
              case "MODAL-BRANDING":
                GLOBAL.brandingReset();
              break;
              case "MODAL-UIUX":
                GLOBAL.uiuxReset();
              break;
            }
            // ここでcanvasにフォーカスさせないとあかんな。
          }
        }
      } // if(GLOBAL.overlayInteractive)
    }

